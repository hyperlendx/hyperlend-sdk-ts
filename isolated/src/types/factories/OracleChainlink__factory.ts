/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleChainlink,
  OracleChainlinkInterface,
} from "../OracleChainlink";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_chainlinkMultiplyAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_chainlinkDivideAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxOracleDelay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_timelockAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyPendingTimelock",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyTimelock",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMaxOracleDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxOracleDelay",
        type: "uint256",
      },
    ],
    name: "SetMaxOracleDelay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousTimelock",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "TimelockTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousTimelock",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "TimelockTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHAINLINK_DIVIDE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHAINLINK_MULTIPLY_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHAINLINK_NORMALIZATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORACLE_PRECISION",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUOTE_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptTransferTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrices",
    outputs: [
      {
        internalType: "bool",
        name: "_isBadData",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_priceLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceHigh",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxOracleDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingTimelockAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMaxOracleDelay",
        type: "uint256",
      },
    ],
    name: "setMaxOracleDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelockAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTimelock",
        type: "address",
      },
    ],
    name: "transferTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610120604081815234620005315762000f7880380380916200002282866200054c565b8439820160e08382031262000531576200003c8362000570565b906020936200004d85820162000570565b6200005a85830162000570565b90620000696060840162000570565b946080840151976200007e60a0860162000570565b9660c086015160018060401b039687821162000531570192601f948886860112156200053157845188811162000536578b5195601f199a620000c7878d8b86011601896200054c565b82885286838301011162000531578c939291869160005b82811062000519575050906000918801015260018060a01b031985600199828b54169560049e8f928d84558d60018060a01b03998a8094169085519882337f31b6c5a04b069b6ec1b3cef44c4e7c1eadd721349cda9823d0b1877b3551cdc6600080a3331617179055876080528660a0528060c0528960e05216908760008315156000146200050c57505063313ce56760e01b85525083919082905afa908115620004d4578d858e938993600091620004ea575b50975b169060008215620004df57505163313ce56760e01b815292839182905afa908115620004d457600091620004b2575b505b60ff8095166012018581116200049d5786620001e58f938f93620005a0565b92518092818863313ce56760e01b98898352165afa90811562000492578691829160009162000470575b5016911601918483116200045b57908b86928e5195869384928352165afa9182156200045057906200024c92916000926200041a575b50620005a0565b1698604d8a11620004055761010099600a0a8a526002558151948511620003f0576003968754908582811c92168015620003e5575b83831014620003d0575083811162000385575b50809285116001146200031d57508394509083929160009462000311575b50501b9160001990841b1c19161790555b516109ac9182620005cc8339608051826106cf015260a0518261052d015260c0518281816101cf01526104ae015260e0518281816101fb015261044701525181818161022a01526104f50152f35b015192503880620002b2565b9294849081168760005284600020946000905b888383106200036a575050501062000351575b505050811b019055620002c3565b015160001983861b60f8161c1916905538808062000343565b85870151885590960195948501948793509081019062000330565b87600052816000208480880160051c820192848910620003c6575b0160051c019085905b828110620003b957505062000294565b60008155018590620003a9565b92508192620003a0565b602290634e487b7160e01b6000525260246000fd5b91607f169162000281565b604187634e487b7160e01b6000525260246000fd5b601188634e487b7160e01b6000525260246000fd5b62000440919250853d871162000448575b6200043781836200054c565b81019062000585565b903862000245565b503d6200042b565b8b513d6000823e3d90fd5b60118c634e487b7160e01b6000525260246000fd5b6200048b9150893d8b1162000448576200043781836200054c565b386200020f565b8e513d6000823e3d90fd5b60118d634e487b7160e01b6000525260246000fd5b620004cd9150863d881162000448576200043781836200054c565b38620001c4565b8d513d6000823e3d90fd5b9350505050620001c6565b620005059150843d861162000448576200043781836200054c565b3862000192565b9193955091509762000195565b8181018401518a82018501528f9650889301620000de565b600080fd5b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200053657604052565b51906001600160a01b03821682036200053157565b9081602091031262000531575160ff81168103620005315790565b9060ff8091169116039060ff8211620005b557565b634e487b7160e01b600052601160045260246000fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c92836306fdde031461074557508263090f3f501461071d5782630d623e10146106fe578263210663e4146106ba578263313ce5671461069e57826345014095146106345782634bc66f321461060b5782634f8b4ae71461057b57826352f1edcc1461055c57826378892cea1461051857826379f94298146104dd5782639000b126146104995782639c0d313f14610476578263b6ee19f914610432578263bd9a548b146101a2578263cd3b691c1461014957505063f6ccaad4146100e257600080fd5b346101465780600319360112610146576100fa6108e5565b80546001600160a01b0319908116825560015490336001600160a01b0383167f31b6c5a04b069b6ec1b3cef44c4e7c1eadd721349cda9823d0b1877b3551cdc68580a316331760015580f35b80fd5b9091503461019e57602036600319011261019e577f489892ab7e2f839a8630c507bc283ea1a98549bf7a6d8a315ebdf78e45794dae9035916101896108bf565b6002548151908152836020820152a160025580f35b8280fd5b83823461042e578160031936011261042e576001600160a01b036ec097ce7bc90715b34b9f1000000000847f000000000000000000000000000000000000000000000000000000000000000083168061034d575b5050907f00000000000000000000000000000000000000000000000000000000000000001680610260575b6060848461024f7f00000000000000000000000000000000000000000000000000000000000000008661097f565b908051928352816020840152820152f35b60a08591845196878092633fabe5a360e21b82525afa80156103405784958591610309575b50848613908115916102f4575b506102ad57506102a760609461024f9261097f565b90610221565b6102f090835191829162461bcd60e51b83528201606090602081526014602082015273696e76616c6964206f7261636c6520707269636560601b60408201520190565b0390fd5b6102ff91504261095c565b6002541086610292565b905061032d91955060a03d8111610339575b6103258183610887565b810190610927565b50969250509486610285565b503d61031b565b50505051903d90823e3d90fd5b60a090855192838092633fabe5a360e21b82525afa801561042457859186916103ff575b50858213908115916103ea575b506103a857808202918204036103955784866101f6565b634e487b7160e01b845260118552602484fd5b835162461bcd60e51b8152602081880181815260149181019190915273696e76616c6964206f7261636c6520707269636560601b604082015281906060010390fd5b6103f591504261095c565b600254108761037e565b9050610419915060a03d8111610339576103258183610887565b509250509087610371565b84513d87823e3d90fd5b5080fd5b83823461042e578160031936011261042e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83823461042e578160031936011261042e5760209051670de0b6b3a76400008152f35b83823461042e578160031936011261042e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83823461042e578160031936011261042e57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83823461042e578160031936011261042e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83823461042e578160031936011261042e576020906002549051908152f35b83346101465780600319360112610146576105946108bf565b61059c6108e5565b80546001600160a01b03199081168255600154826001600160a01b03821681817f162998b90abc2507f3953aa797827b03a14c42dbd9a35f09feaf02e0d592773a8280a37f31b6c5a04b069b6ec1b3cef44c4e7c1eadd721349cda9823d0b1877b3551cdc68280a31660015580f35b83823461042e578160031936011261042e5760015490516001600160a01b039091168152602090f35b83903461042e57602036600319011261042e57356001600160a01b038181169182900361019e576106636108bf565b82546001600160a01b03191682178355600154167f162998b90abc2507f3953aa797827b03a14c42dbd9a35f09feaf02e0d592773a8380a380f35b83823461042e578160031936011261042e576020905160128152f35b83823461042e578160031936011261042e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9091503461019e578260031936011261019e5760209250549051908152f35b83823461042e578160031936011261042e57905490516001600160a01b039091168152602090f35b8290853461014657806003193601126101465780600354600181811c91818116801561087d575b602098898510821461086a575091839189959388958652908160001461084957506001146107ed575b50506107a79250959392950382610887565b82519382859384528251928382860152825b8481106107d757505050828201840152601f01601f19168101030190f35b81810183015188820188015287955082016107b9565b600386527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9492508591905b8183106108315750889450508201016107a788610795565b85548884018501529485019487945091830191610819565b9150506107a794925060ff191682840152151560051b820101869288610795565b634e487b7160e01b875260229052602486fd5b92607f169261076c565b90601f8019910116810190811067ffffffffffffffff8211176108a957604052565b634e487b7160e01b600052604160045260246000fd5b6001546001600160a01b031633036108d357565b604051630e05f48560e11b8152600490fd5b6000546001600160a01b031633036108f957565b604051633d71279960e21b8152600490fd5b519069ffffffffffffffffffff8216820361092257565b600080fd5b908160a09103126109225761093b8161090b565b9160208201519160408101519161095960806060840151930161090b565b90565b9190820391821161096957565b634e487b7160e01b600052601160045260246000fd5b8115610989570490565b634e487b7160e01b600052601260045260246000fdfea164736f6c6343000813000a";

type OracleChainlinkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleChainlinkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleChainlink__factory extends ContractFactory {
  constructor(...args: OracleChainlinkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseToken: string,
    _quoteToken: string,
    _chainlinkMultiplyAddress: string,
    _chainlinkDivideAddress: string,
    _maxOracleDelay: BigNumberish,
    _timelockAddress: string,
    _name: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OracleChainlink> {
    return super.deploy(
      _baseToken,
      _quoteToken,
      _chainlinkMultiplyAddress,
      _chainlinkDivideAddress,
      _maxOracleDelay,
      _timelockAddress,
      _name,
      overrides || {}
    ) as Promise<OracleChainlink>;
  }
  override getDeployTransaction(
    _baseToken: string,
    _quoteToken: string,
    _chainlinkMultiplyAddress: string,
    _chainlinkDivideAddress: string,
    _maxOracleDelay: BigNumberish,
    _timelockAddress: string,
    _name: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseToken,
      _quoteToken,
      _chainlinkMultiplyAddress,
      _chainlinkDivideAddress,
      _maxOracleDelay,
      _timelockAddress,
      _name,
      overrides || {}
    );
  }
  override attach(address: string): OracleChainlink {
    return super.attach(address) as OracleChainlink;
  }
  override connect(signer: Signer): OracleChainlink__factory {
    return super.connect(signer) as OracleChainlink__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleChainlinkInterface {
    return new utils.Interface(_abi) as OracleChainlinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleChainlink {
    return new Contract(address, _abi, signerOrProvider) as OracleChainlink;
  }
}
